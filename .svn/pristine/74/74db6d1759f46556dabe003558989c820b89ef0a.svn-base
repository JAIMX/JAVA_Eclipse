package mTSP_GA;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;

import javax.swing.JComponent;
import javax.swing.JFrame;

//public class Graph extends Frame implements WindowListener {
//	static double[] x;
//	static double[] y;
//	private static final int DEFAULT_WIDTH = 500;
//	private static final int DEFAULT_HEIGHT = 500;
//	ArrayList<Individual> firstFront;
//
//	public Graph(ArrayList<Individual> firstFront, String title) {
//		super(title);
//		this.firstFront = firstFront;
//		setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);
//		setVisible(true);
//		this.addWindowListener(this);
//	}
//
//	public void windowClosing(WindowEvent e) {
//		System.out.println("windowClosing() method");
//		System.exit(0);
//	}
//
//	public void windowClosed(WindowEvent e) {
//	}
//
//	public void windowActivated(WindowEvent e) {
//	}
//
//	public void windowDeactivated(WindowEvent e) {
//	}
//
//	public void windowIconified(WindowEvent e) {
//		System.out.println("windowIconified() method");
//	}
//
//	public void windowDeiconified(WindowEvent e) {
//		System.out.println("windowDeiconified() method");
//	}
//
//	public void windowOpened(WindowEvent e) {
//		System.out.println("windowOpened() method");
//	}
//
//	public void paint(Graphics g) {
//
//		System.out.println(firstFront.size());
//
//		for (int i = 0; i < firstFront.size(); i++) {
//			double x = firstFront.get(i).getFitness1();
//			double y = firstFront.get(i).getFitness2();
//			if (x <= 50 && y <= 50) {
//				g.drawOval((int) x, (int) y , 1, 1);
//			}
//
//		}
//
//	}
//
//	public Dimension getPreferredSize() {
//		return new Dimension(DEFAULT_WIDTH, DEFAULT_HEIGHT);
//	}
//
//}

//public class Graph extends JFrame {
//	static double[] x;
//	static double[] y;
//	private static final int DEFAULT_WIDTH = 500;
//	private static final int DEFAULT_HEIGHT = 500;
//	ArrayList<Individual> firstFront;
//	private Graphics graph;
//	
//	public Graph(ArrayList<Individual> firstFront){
//	    this.firstFront=firstFront;
//	    JFrame frame=new JFrame();
//	    
//	    try{
//	        Thread.sleep(500);
//	    }catch(Exception e){
//	        e.printStackTrace();
//	    }
//	    
//	    graph=this.getGraphics();
//	    paintComponent(graph);
//	    
//	    frame.setTitle("Test");
//	    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//	    frame.setVisible(true);
//	}
//	
//	public void paintComponent(Graphics g){
//	    
//	    g.drawOval(50, 50, 10, 10);
//	    
//        for (int i = 0; i < firstFront.size(); i++) {
//            double x = firstFront.get(i).getFitness1();
//            double y = firstFront.get(i).getFitness2();
//            if (x <= 50 && y <= 50) {
//                g.drawOval((int) x, (int) y, 1, 1);
//            }
//
//        }
//	}
//	
//	
//}

public class Graph {
    static ArrayList<Individual> firstFront;
    static int[] x={10,20,30,40,50};
    static int[] y={10,20,30,40,50};

    public Graph() {

        EventQueue.invokeLater(() -> {
            JFrame frame = new DrawFrame();
            frame.setTitle("DrawTest");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setVisible(true);
        });
    }
    
//    public static void main(String[] args)
//    {
//       EventQueue.invokeLater(() ->
//          {
//             JFrame frame = new DrawFrame();
//             frame.setTitle("DrawTest");
//             frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//             frame.setVisible(true);
//          });
//    }
    public static void main(String[] args) {
        Graph g=new Graph();
    }
}

/**
 * A frame that contains a panel with drawings
 */
class DrawFrame extends JFrame {
    public DrawFrame() {
        add(new DrawComponent());
        pack();
    }
}

/**
 * A component that displays rectangles and ellipses.
 */

class DrawComponent extends JComponent
{
   private static final int DEFAULT_WIDTH = 400;
   private static final int DEFAULT_HEIGHT = 400;

   public void paintComponent(Graphics g)
   {
      Graphics2D g2 = (Graphics2D) g;
      g2.drawOval(10, 15, 5, 5);
      for(int i=0;i<5;i++){
          g2.drawOval(Graph.x[i], Graph.y[i], 5, 5);
      }

      // draw a rectangle

      double leftX = 100;
      double topY = 100;
      double width = 200;
      double height = 150;

      Rectangle2D rect = new Rectangle2D.Double(leftX, topY, width, height);
      g2.draw(rect);

      // draw the enclosed ellipse

      Ellipse2D ellipse = new Ellipse2D.Double();
      ellipse.setFrame(rect);
      g2.draw(ellipse);

      // draw a diagonal line

      g2.draw(new Line2D.Double(leftX, topY, leftX + width, topY + height));

      // draw a circle with the same center

      double centerX = rect.getCenterX();
      double centerY = rect.getCenterY();
      double radius = 150;

      Ellipse2D circle = new Ellipse2D.Double();
      circle.setFrameFromCenter(centerX, centerY, centerX + radius, centerY + radius);
      g2.draw(circle);
   }
   
   public Dimension getPreferredSize() { return new Dimension(DEFAULT_WIDTH, DEFAULT_HEIGHT); }
}
